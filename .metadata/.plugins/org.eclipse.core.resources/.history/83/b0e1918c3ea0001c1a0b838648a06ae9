package com.cities.geo.service;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cities.geo.VO.Suggestions;
import com.cities.geo.VO.geoname;
import com.fasterxml.jackson.core.exc.StreamReadException;
import com.fasterxml.jackson.databind.DatabindException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.stream.JsonReader;

@Service
public class geoService {

	public int Test(int a, int b) throws Exception
	{		
		return a*b;
	}

	public Suggestions Suggestions(Suggestions sug) throws Exception
	{
		/*
		StringTokenizer st ;
        BufferedReader TSVFile = new BufferedReader(new FileReader("cities_canada-usa.tsv"));
        String dataRow = TSVFile.readLine(); // Read first line.

        while (dataRow != null){
            st = new StringTokenizer(dataRow,"\t");
            List<String>dataArray = new ArrayList<String>() ;
            while(st.hasMoreElements()){
                dataArray.add(st.nextElement().toString());
            }
            for (String item:dataArray) { 
                System.out.print(item + "  "); 
            }
            System.out.println(); // Print the data line.
            dataRow = TSVFile.readLine(); // Read next line of data.
        }
        // Close the file once all data has been read.
        TSVFile.close();

        // End the printout with a blank line.
        System.out.println();
		*/
        
        /*
         * Test
        */
		
		return null;
	}

	public List<geoname> GetAll(geoname geo) throws StreamReadException, DatabindException, IOException
	{
        /*
		BufferedReader BR = new BufferedReader(new FileReader("test1.json"));
        geoname sample = new Gson().fromJson(BR, geoname.class);
        
        BR.close();
        */

		List<geoname> Pro = new ArrayList<geoname>();
        ObjectMapper mapper = new ObjectMapper();
        List<geoname> sample2 = new ArrayList<mapper.readValue(new File("test1.json")>, geoname.class);
        
		return sample2;
	}

}
